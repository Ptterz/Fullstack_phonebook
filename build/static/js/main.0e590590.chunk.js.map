{"version":3,"sources":["components/Filter.js","components/PhoneBook.js","components/PersonForm.js","services/PhoneBookService.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","filter","updateFilter","react_default","a","createElement","value","onChange","PhoneBook","person","deletePerson","name","number","type","onClick","PersonForm","addNewPerson","updateNewName","updateNewNumber","newName","newNumber","onSubmit","baseURL","PhoneBookService","axios","get","concat","then","response","data","newPerson","post","id","url","delete","console","log","put","Notification","message","className","content","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","notification","setNotification","useEffect","service","personsToShow","toLowerCase","includes","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","personExists","find","changedPerson","objectSpread","undefined","window","confirm","map","setTimeout","catch","error","returnedPerson","createPerson","length","components_PhoneBook","key","p","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0e590590.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, updateFilter }) => (\n    <div>\n        Rajaa:\n        <input\n            value={filter}\n            onChange={updateFilter}\n        />\n    </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst PhoneBook = ({ person, deletePerson }) => {\n    return (\n        <tr>\n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td><button type=\"button\" onClick={deletePerson}>poista</button></td>\n        </tr>\n    )\n}\n\nexport default PhoneBook","import React from 'react'\n\nconst PersonForm = ({ addNewPerson, updateNewName, updateNewNumber, newName, newNumber }) => (\n    <form onSubmit={addNewPerson}>\n        <div>\n            nimi:\n            <input\n                value={newName}\n                onChange={updateNewName}\n            />\n        </div>\n        <div>\n            numero:\n            <input\n                number={newNumber}\n                onChange={updateNewNumber}\n            />\n        </div>\n        <div>\n            <button type=\"submit\">lisää</button>\n        </div>\n    </form>\n)\n\nexport default PersonForm","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(`${baseURL}`)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(`${baseURL}`, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const url = `${baseURL}/${id}`\n    const request = axios.delete(url)\n    return request.then(response => response.data)\n}\n\nconst updatePerson = person => {\n    console.log(person)\n    const url = `${baseURL}/${person.id}`\n    const request = axios.put(url, person)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, updatePerson }","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={message.type}>\n            {message.content}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PhoneBook from './components/PhoneBook'\nimport PersonForm from './components/PersonForm'\nimport service from './services/PhoneBookService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notification, setNotification] = useState(null)\n\n    useEffect(() => {\n        service\n            .getAll()\n            .then(response => {\n                setPersons(response)\n            })\n    }, [])\n\n    const updateNewName = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const updateNewNumber = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const updateFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const personsToShow = persons.filter(person =>\n        person.name.toLowerCase().includes(filter.toLowerCase())\n    )\n\n    const updatePerson = (personObject) => {\n        window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`)\n            ? service\n                .updatePerson(personObject)\n                .then(response => {\n                    setPersons(persons.map(person => person.id !== personObject.id ? person : response))\n                    setNotification({\n                        content: `${personObject.name} päivitetty onnistuneesti`,\n                        type: 'notification'\n                    })\n                    setNewName('')\n                    setNewNumber('')\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setNotification({\n                        content: `${personObject.name} päivitys epäonnistui`,\n                        type: 'error'\n                    })\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n            : console.log('Cancel')\n    }\n\n    const createPerson = () => {\n        const newPerson = {\n            name: newName,\n            number: newNumber\n        }\n        service\n            .create(newPerson)\n            .then(returnedPerson => {\n                setPersons(persons.concat(returnedPerson))\n                setNotification({\n                    content: `${returnedPerson.name} lisätty onnistuneesti`,\n                    type: 'notification'\n                })\n                setNewName('')\n                setNewNumber('')\n                setTimeout(() => {\n                    setNotification(null)\n                }, 5000)\n            })\n            .catch(error => {\n                setNotification({\n                    content: `${newPerson.name} lisäys epäonnistui`,\n                    type: 'error'\n                })\n                setTimeout(() => {\n                    setNotification(null)\n                }, 5000)\n            })\n    }\n\n    const addNewPerson = (event) => {\n        event.preventDefault()\n        const personExists = persons.find(person => person.name === newName)\n        const changedPerson = { ...personExists, number: newNumber }\n\n        personExists !== undefined\n            ? updatePerson(changedPerson)\n            : createPerson()\n    }\n\n    const deletePerson = person => {\n        window.confirm(`Poistetaanko ${person.name}?`)\n            ? service\n                .deletePerson(person.id)\n                .then(response => {\n                    setPersons(persons.filter(p => person.id !== p.id))\n                    setNotification({\n                        content: `${person.name} poistettu onnistuneesti`,\n                        type: 'notification'\n                    })\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setPersons(persons.filter(p => person.id !== p.id))\n                    setNotification({\n                        content: `${person.name} on jo poistettu`,\n                        type: 'error'\n                    })\n                    setTimeout(() => {\n                        setNotification(null)\n                    }, 5000)\n                })\n            : console.log('Cancel')\n    }\n\n    const entries = () => {\n        return (\n            <div>\n                <table>\n                    <tbody>\n                        {personsToShow.map(person => (\n                            <PhoneBook\n                                key={person.name}\n                                person={person}\n                                deletePerson={() => deletePerson(person)}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <h1>Puhelinluettelo</h1>\n            <Notification message={notification} />\n            <Filter filter={filter} updateFilter={updateFilter} />\n            <h2>Lisää uusi henkilö</h2>\n            <PersonForm\n                addNewPerson={addNewPerson}\n                newName={newName}\n                newNumber={newNumber}\n                updateNewName={updateNewName}\n                updateNewNumber={updateNewNumber}\n            />\n            <h2>Numerot</h2>\n            {persons.length === 0\n                ? <p>Ladataan tietoja</p>\n                : entries()\n            }\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}